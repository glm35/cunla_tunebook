From 7301e7316d2a2ea158a99244ac13e9e6d07a8edf Mon Sep 17 00:00:00 2001
From: Gwenael Lambrouin <glambrouin@wanadoo.fr>
Date: Tue, 14 Aug 2007 11:50:29 +0200
Subject: [PATCH] Fixed two problems with repeats and alternatives

- Invalid conversion of repeat/alternative/repeat sequence

- Second alternative not closed before the end of the tune
---
 scripts/abc2ly.py |   39 +++++++++++++++++++++++++++++++++------
 1 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/scripts/abc2ly.py b/scripts/abc2ly.py
index 605d82d..252f125 100644
--- a/scripts/abc2ly.py
+++ b/scripts/abc2ly.py
@@ -1098,7 +1098,7 @@ bar_dict = {
 ':|' : '}',
 '|:' : '\\repeat volta 2 {',
 '::' : '} \\repeat volta 2 {',
-'|1' : '\\bar "|" } \\alternative{{',
+'|1' : '} \\alternative{{',
 '|2' : '} {',
 ':|2' : '} {',
 '|' :  '\\bar "|"'
@@ -1111,10 +1111,11 @@ repeat_ender = ['::', ':|']
 repeat_opener = ['::', '|:']
 in_repeat = [''] * 8
 doing_alternative = [''] * 8
+alternative_bar_count = [0] * 8
 using_old = ''
 
 def try_parse_bar (str,state):
-    global in_repeat, doing_alternative, using_old
+    global in_repeat, doing_alternative, alternative_bar_count, using_old
     do_curly = ''
     bs = None
     if current_voice_idx < 0:
@@ -1128,12 +1129,27 @@ def try_parse_bar (str,state):
             else:
                 bs = "%s" % bar_dict[s]
             str = str[trylen:]
+
             if s in alternative_opener:
                 if not in_repeat[current_voice_idx]:
                     using_old = 't'
                     bs = "\\bar \"%s\"" % old_bar_dict[s]
                 else:
-                    doing_alternative[current_voice_idx] = 't'
+                    if s == '|1':
+                        doing_alternative[current_voice_idx] = '1'
+                        alternative_bar_count[current_voice_idx] = 0
+                    else: # '|2' or ':|2'
+                        doing_alternative[current_voice_idx] = '2'
+                        alternative_bar_count[current_voice_idx] += 1
+            else:
+                if doing_alternative[current_voice_idx] == '1':
+                    alternative_bar_count[current_voice_idx] += 1
+                elif doing_alternative[current_voice_idx] == '2':
+                    alternative_bar_count[current_voice_idx] -= 1
+                    if alternative_bar_count[current_voice_idx] == 0:
+                        do_curly = '2'
+                        doing_alternative[current_voice_idx] = ''
+                        in_repeat[current_voice_idx] = ''
 
             if s in repeat_ender:
                 if not in_repeat[current_voice_idx]:
@@ -1142,20 +1158,28 @@ def try_parse_bar (str,state):
                     in_repeat[current_voice_idx] = ''
                 else:
                     if doing_alternative[current_voice_idx]:
-                        do_curly = 't'
+                        do_curly = '1'
                 if using_old:
                     bs = "\\bar \"%s\"" % old_bar_dict[s]
                 else:
                     bs =  bar_dict[s]
                 doing_alternative[current_voice_idx] = ''
                 in_repeat[current_voice_idx] = ''
+                
             if s in repeat_opener:
+                if doing_alternative[current_voice_idx]:
+                    doing_alternative[current_voice_idx] = ''
+                    if s == '::':
+                        do_curly = '1'
+                    else: # '|:'
+                        do_curly = '2'
                 in_repeat[current_voice_idx] = 't'
                 if using_old:
                     bs = "\\bar \"%s\"" % old_bar_dict[s]
                 else:
                     bs =  bar_dict[s]
             break
+
     if str[:1] == '|':
         state.next_bar = '|\n'
         str = str[1:]
@@ -1170,10 +1194,13 @@ def try_parse_bar (str,state):
     if bs <> None:
         clear_bar_acc(state)
         close_beam_state(state)
-        voices_append (bs)
         if do_curly != '':
-            voices_append("} ")
+            if do_curly == '2':
+                voices_append("} } ")
+            else:
+                voices_append("} ")
             do_curly = ''
+        voices_append (bs)
     return str
 
 def try_parse_tie (str):
-- 
1.5.2.2

